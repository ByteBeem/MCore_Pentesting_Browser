#include "CustomTabBar.h"
#include <QStyle>

CustomTabBar::CustomTabBar(QWidget *parent)
    : QTabBar(parent) {}

void CustomTabBar::paintEvent(QPaintEvent *event) {
    QTabBar::paintEvent(event);
    QPainter painter(this);
    for (int i = 0; i < count(); ++i) {
        QRect rect = tabRect(i);
        drawCloseButton(&painter, rect, tabAt(rect.center()) == i);
    }
}

void CustomTabBar::mousePressEvent(QMouseEvent *event) {
    int index = tabAt(event->pos());
    if (index >= 0) {
        QRect rect = tabRect(index);
        if (rect.contains(event->pos())) {
            closeTabAt(event->pos());
        }
    }
    QTabBar::mousePressEvent(event);
}

void CustomTabBar::drawCloseButton(QPainter *painter, const QRect &rect, bool active) {
    QRect buttonRect = rect.adjusted(rect.width() - 20, 5, 0, 0);
    painter->setPen(Qt::black);
    painter->drawRect(buttonRect);
    if (active) {
        painter->setBrush(Qt::red);
        painter->drawRect(buttonRect);
    }
}

void CustomTabBar::closeTabAt(const QPoint &pos) {
    int index = tabAt(pos);
    if (index >= 0) {
        emit tabCloseRequested(index);
    }
}
